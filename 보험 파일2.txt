import time
import datetime
import tkinter
import tkinter.filedialog
import clipboard
import keyboard
import pyaudio
import time 
import torch

import math
import logging
from datetime import datetime

import torch
from torch.utils.data import DataLoader
from datasets import load_dataset
from sentence_transformers import SentenceTransformer,  LoggingHandler, losses, models, util
from sentence_transformers.evaluation import EmbeddingSimilarityEvaluator
from sentence_transformers.readers import InputExample
from sklearn.cluster import KMeans

from speech_recognition import *
from pyautogui import *
import clipboard
import keyboard
import pyaudio

import time # 필요한 모듈 불러오기
from datetime import datetime
logging.basicConfig(
    format="%(asctime)s - %(message)s",
    datefmt="%Y-%m-%d %H:%M:%S",
    level=logging.INFO,
    handlers=[LoggingHandler()],
)







model_name = "klue/roberta-base"
train_batch_size = 32
num_epochs = 1
model_save_path = "output/training_klue_sts_" + model_name.replace("/", "-") + "-" + datetime.now().strftime("%Y-%m-%d_%H-%M-%S")
embedding_model = models.Transformer(model_name)


pooler = models.Pooling(
    embedding_model.get_word_embedding_dimension(),
    pooling_mode_mean_tokens=True,
    pooling_mode_cls_token=False,
    pooling_mode_max_tokens=False,
)



model = SentenceTransformer(modules=[embedding_model, pooler])
datasets = load_dataset("klue", "sts")
testsets = load_dataset("kor_nlu", "sts")


train_samples = []
dev_samples = []
test_samples = []


for phase in ["train", "validation"]:
    examples = datasets[phase]
    for example in examples:
        score = float(example["labels"]["label"]) / 5.0  # 0.0 ~ 1.0 스케일로 유사도 정규화
        inp_example = InputExample(
            texts=[example["sentence1"], example["sentence2"]], 
            label=score,
        )
        if phase == "validation":
            dev_samples.append(inp_example)
        else:
            train_samples.append(inp_example)





for example in testsets["test"]:
    score = float(example["score"]) / 5.0
    if example["sentence1"] and example["sentence2"]:
        inp_example = InputExample(
            texts=[example["sentence1"], example["sentence2"]],
            label=score,
        )
    test_samples.append(inp_example)



train_dataloader = DataLoader(
    train_samples,
    shuffle=True,
    batch_size=train_batch_size,
)


train_loss = losses.CosineSimilarityLoss(model=model)
evaluator = EmbeddingSimilarityEvaluator.from_input_examples(
    dev_samples,
    name="sts-dev",
)



warmup_steps = math.ceil(len(train_dataloader) * num_epochs  * 0.1)  # 10% of train data for warm-up
logging.info(f"Warmup-steps: {warmup_steps}")

model.fit(
    train_objectives=[(train_dataloader, train_loss)],
    evaluator=evaluator,
    epochs=num_epochs,
    evaluation_steps=1000,
    warmup_steps=warmup_steps,
    output_path=model_save_path,
)





docs = []
file= open('./data/압좌증후군.txt', 'rt' , encoding='UTF8')
passwords = file.readlines()
for password in passwords:
    #print(password)
    password = password.replace('\n', '')
    docs.append(password)

document_embeddings = model.encode(docs)






model = SentenceTransformer(model_save_path)
test_evaluator = EmbeddingSimilarityEvaluator.from_input_examples(test_samples, name='sts-test')
test_evaluator(model, output_path=model_save_path)

window=tkinter.Tk()
window.title("Emergency Program")
window.geometry("900x700+100+100")
window.resizable(True, True)

#메뉴바 설정
menubar=tkinter.Menu(window)

menu_1=tkinter.Menu(menubar, tearoff=0)
menubar.add_cascade(label="Dashboard", menu=menu_1)
menu_4=tkinter.Menu(menubar, tearoff=0)
menubar.add_cascade(label="Local", menu=menu_4)
menu_5=tkinter.Menu(menubar, tearoff=0)
menubar.add_cascade(label="Log", menu=menu_5)
menu_2=tkinter.Menu(menubar, tearoff=0)
menubar.add_cascade(label="Network", menu=menu_2)        
menu_3=tkinter.Menu(menubar, tearoff=0)
menubar.add_cascade(label="Option", menu=menu_3) 

window.config(menu=menubar)

# 전화번호
call_number_label = tkinter.Label(window, text="전화번호")
call_number_label.configure(font=(40))  
call_number_label.place(x=40, y= 30)

call_number_text = tkinter.Text(window,width=40,height=3 )
call_number_text.configure(font=(40))
call_number_text.place(x=40, y =60)

# 현재시간
Current_time_label=tkinter.Label(window, text="현재 시간")
Current_time_label.configure(font=(40))  
Current_time_label.place(x=40, y=120)

Current_time_text=tkinter.Text(window,width=40,height=3 )
Current_time_text.configure(font=(40))
Current_time_text.place(x=40, y=150)

# 현재 위치
Current_loc_label=tkinter.Label(window, text="현재 위치")
Current_loc_label.configure(font=(40))  
Current_loc_label.place(x=40, y=210)

Current_loc_text=tkinter.Text(window,width=40,height=3 )
Current_loc_text.configure(font=(40))
Current_loc_text.place(x=40, y=240)


# 대화내용
Current_call_label=tkinter.Label(window, text="대화 내용")
Current_call_label.configure(font=(40))  
Current_call_label.place(x=500, y=30)

Current_call_text=tkinter.Text(window,width=120,height=15)
Current_call_text.place(x=500, y=60)
 
    
def read_voice(): # 음성 인식을 하는 함수
    r = Recognizer()
    mic = Microphone() # 마이크 객체
    with mic as source:
        audio = r.listen(source) # 음성 읽어오기
    voice_data = r.recognize_google(audio, language='ko')
    Current_call_text.insert(tkinter.CURRENT, voice_data)


# 녹음 버튼
record=tkinter.Button(window,width=12,height=2, text="일반 녹음" , command=read_voice)
record.configure(font=(40))
record.place(x=955, y=280) 

Sound = tkinter.Button(window,width=12,height=2, text="NC 녹음")
Sound.configure(font=(40))
Sound.place(x=1090, y=280)

# 분석 버튼
Analysis=tkinter.Button(window,width=12,height=2, text="분석")
Analysis.configure(font=(40))
Analysis.place(x=1225, y=280)

# 분석 결과
Result_label=tkinter.Label(window, text="분석 결과")
Result_label.configure(font=(40))  
Result_label.place(x=500, y=350)

Result_text=tkinter.Text(window,width=120,height=15 )
Result_text.place(x=500, y=380)



def change_a():
    global photo2
    photo2 = tkinter.PhotoImage(file="./1.PNG")
    callbutton.config(image=photo2 ,command = change_b)    
    
    

def change_b():
    Current_time_text.delete("1.0","end")
    call_number_text.delete("1.0","end")
    Current_loc_text.delete("1.0","end")
    global photo2
    photo2 = tkinter.PhotoImage(file="./2.PNG")
    callbutton.config(image=photo2 ,command = change_a)    
    now = datetime.datetime.now()   
    time=str(now.year)+"년 "+str(now.hour)+"시 "+str(now.minute)+"분 "+str(now.second)+"초"
    Current_time_text.insert(tkinter.CURRENT, time)
    call_number_text.insert(tkinter.CURRENT, "010-1234-5678")
    Current_loc_text.insert(tkinter.CURRENT, "경상북도 포항시 남구 청암로 77")



photo = tkinter.PhotoImage(file="./1.PNG")
callbutton = tkinter.Button(window,width=230,height=230 ,image=photo ,command = change_b)
callbutton.place(x=40, y=500)


window.mainloop()
